name: CI & Release

on:
  push:
    branches:
      - main

jobs:
  ruff:
    name: "Lint with Ruff"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - run: python -m ruff check .
      - run: python -m ruff format . --check

  filter_manifest:
    name: "Detect manifest.json changes"
    runs-on: ubuntu-latest
    needs: ruff
    outputs:
      manifest: ${{ steps.manifest_filter.outputs.manifest }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - id: manifest_filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            manifest:
              - 'custom_components/ha_anniversaries_export_ics/manifest.json'

  release:
    name: "Release on version bump"
    runs-on: ubuntu-latest
    needs:
      - ruff
      - filter_manifest
    if: needs.filter_manifest.outputs.manifest == 'true'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Get version
        id: get_version
        run: |
          VERSION=$(jq -r .version custom_components/ha_anniversaries_export_ics/manifest.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check for existing Git tag
        id: check_tag
        run: |
          TAG=${{ steps.get_version.outputs.version }}
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create & push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          TAG=${{ steps.get_version.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Package integration
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          cd custom_components/ha_anniversaries_export_ics
          zip -r ha_anniversaries_export_ics.zip ./

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: ${{ contains( steps.get_version.outputs.version, '-' ) 
                       || contains( steps.get_version.outputs.version, 'b') 
                       || contains( steps.get_version.outputs.version, 'rc') }}
          files: custom_components/ha_anniversaries_export_ics/ha_anniversaries_export_ics.zip
